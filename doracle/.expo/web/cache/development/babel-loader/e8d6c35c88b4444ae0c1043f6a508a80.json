{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Doracle-App-main\\\\doracle\\\\App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { Button } from \"./Button\";\n\nfunction HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }, \"Login to your required panel.\", \"\\n\", \"\\n\"), React.createElement(Button, {\n    text: \"Login as Hospital\",\n    onPress: function onPress() {\n      return navigation.navigate('Hospital Login', {\n        name: 'XYZ'\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, \"\\n\"), React.createElement(Button, {\n    text: \"Login as Patient\",\n    onPress: function onPress() {\n      return navigation.navigate('Patient Login');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction PLoginScreen(_ref2) {\n  var navigation = _ref2.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      id = _useState2[0],\n      setText = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setText1 = _useState4[1];\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.inputView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    style: styles.inputText,\n    placeholder: \"Patient Id...\",\n    placeholderTextColor: \"#003f5c\",\n    onChangeText: function onChangeText(id) {\n      return setText(id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: styles.inputView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    secureTextEntry: true,\n    style: styles.inputText,\n    placeholder: \"Patient Password...\",\n    placeholderTextColor: \"#003f5c\",\n    onChangeText: function onChangeText(id) {\n      return setText1(id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 15\n    }\n  })), React.createElement(TouchableOpacity, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.forgot,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, \"Forgot Password?\")), React.createElement(TouchableOpacity, {\n    style: styles.loginBtn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.loginText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, \"LOGIN\")));\n}\n\nfunction HLoginScreen(_ref3) {\n  var navigation = _ref3.navigation;\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      id = _useState6[0],\n      setText2 = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      password = _useState8[0],\n      setText3 = _useState8[1];\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.inputView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    style: styles.inputText,\n    placeholder: \"Hospital Id...\",\n    placeholderTextColor: \"#003f5c\",\n    onChangeText: function onChangeText(id) {\n      return setText2(id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: styles.inputView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    secureTextEntry: true,\n    style: styles.inputText,\n    placeholder: \"Hospital Password...\",\n    placeholderTextColor: \"#003f5c\",\n    onChangeText: function onChangeText(id) {\n      return setText3(id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  })), React.createElement(TouchableOpacity, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.forgot,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, \"Forgot Password?\")), React.createElement(TouchableOpacity, {\n    style: styles.loginBtn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.loginText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, \"LOGIN\")));\n}\n\nfunction HospitalScreen(_ref4) {\n  var navigation = _ref4.navigation,\n      route = _ref4.route;\n  return React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 10\n    }\n  }, \"Welcome to \", route.params.name, \" Hospital!\");\n}\n\nfunction PatientScreen(_ref5) {\n  var navigation = _ref5.navigation,\n      route = _ref5.route;\n  return React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 10\n    }\n  }, \"Hello again Patient \", route.params.name, \"!\");\n}\n\nfunction LogoTitle() {\n  return React.createElement(Image, {\n    style: {\n      width: 100,\n      height: 100\n    },\n    source: require(\"./DORACLE.png\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }\n  });\n}\n\nvar Stack = createStackNavigator();\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      id: \"\",\n      password: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(NavigationContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 5\n        }\n      }, React.createElement(Stack.Navigator, {\n        initialRouteName: \"Home\",\n        screenOptions: {\n          headerStyle: {\n            backgroundColor: 'black'\n          },\n          headerTintColor: '#fff',\n          headerTitleStyle: {\n            fontWeight: 'bold'\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 7\n        }\n      }, React.createElement(Stack.Screen, {\n        name: \"Home\",\n        component: HomeScreen,\n        options: {\n          headerTitle: function headerTitle(props) {\n            return React.createElement(LogoTitle, _extends({}, props, {\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 42\n              }\n            }));\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 9\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Patient Login\",\n        component: PLoginScreen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 9\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Hospital Login\",\n        component: HLoginScreen,\n        options: function options(_ref6) {\n          var route = _ref6.route;\n          return {\n            title: route.params.name\n          };\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 9\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Hospital\",\n        component: HospitalScreen,\n        options: function options(_ref7) {\n          var route = _ref7.route;\n          return {\n            title: route.params.name\n          };\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 9\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Patient\",\n        component: PatientScreen,\n        options: function options(_ref8) {\n          var route = _ref8.route;\n          return {\n            title: route.params.name\n          };\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 9\n        }\n      })));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#003f5c',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  text: {\n    color: 'lightblue',\n    fontFamily: 'Monospace',\n    fontSize: 16\n  },\n  inputView: {\n    width: \"80%\",\n    backgroundColor: \"#465881\",\n    borderRadius: 25,\n    height: 50,\n    marginBottom: 20,\n    justifyContent: \"center\",\n    padding: 20\n  },\n  inputText: {\n    height: 50,\n    color: \"white\"\n  },\n  forgot: {\n    color: \"white\",\n    fontSize: 11\n  },\n  loginBtn: {\n    width: \"80%\",\n    backgroundColor: \"#fb5b5a\",\n    borderRadius: 25,\n    height: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 40,\n    marginBottom: 10\n  },\n  loginText: {\n    color: \"white\"\n  }\n});\nexport default App;","map":{"version":3,"sources":["C:/Users/user/Desktop/Doracle-App-main/doracle/App.js"],"names":["React","useState","NavigationContainer","createStackNavigator","Button","HomeScreen","navigation","styles","container","text","navigate","name","PLoginScreen","id","setText","password","setText1","inputView","inputText","forgot","loginBtn","loginText","HLoginScreen","setText2","setText3","HospitalScreen","route","params","PatientScreen","LogoTitle","width","height","require","Stack","App","state","headerStyle","backgroundColor","headerTintColor","headerTitleStyle","fontWeight","headerTitle","props","title","Component","StyleSheet","create","flex","alignItems","justifyContent","color","fontFamily","fontSize","borderRadius","marginBottom","padding","marginTop"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { View, Text, Image, TextInput, StyleSheet, TouchableOpacity } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { Button } from './Button';\n\nfunction HomeScreen ({ navigation }) {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.text}>\n        Login to your required panel.{\"\\n\"}{\"\\n\"}\n      </Text>\n      <Button\n        text=\"Login as Hospital\"\n        onPress={() =>\n          navigation.navigate('Hospital Login', { name: 'XYZ' })\n        }\n      />\n      <Text>{\"\\n\"}</Text>\n      <Button\n        text=\"Login as Patient\"\n        onPress={() =>\n          navigation.navigate('Patient Login')\n        }\n      />\n    </View>\n  );\n}\n\nfunction PLoginScreen ({navigation})  {\n  const [id, setText] = useState('');\n  const [password, setText1] = useState('');\n  return (\n    <View style={styles.container}>\n        <View style={styles.inputView} >\n          <TextInput  \n            style={styles.inputText}\n            placeholder=\"Patient Id...\" \n            placeholderTextColor=\"#003f5c\"\n            onChangeText={id => setText(id)} />\n        </View>\n          \n        <View style={styles.inputView} >\n              <TextInput  \n                secureTextEntry\n                style={styles.inputText}\n                placeholder=\"Patient Password...\" \n                placeholderTextColor=\"#003f5c\"\n                onChangeText={id => setText1(id)}/>\n        </View>\n        <TouchableOpacity>\n            <Text style={styles.forgot}>Forgot Password?</Text>\n          </TouchableOpacity>\n          <TouchableOpacity style={styles.loginBtn}>\n            <Text style={styles.loginText}>LOGIN</Text>\n          </TouchableOpacity>\n      </View>\n  );\n}\n\nfunction HLoginScreen ({navigation})  {\n  const [id, setText2] = useState('');\n  const [password, setText3] = useState('');\n  return (\n    <View style={styles.container}>\n        <View style={styles.inputView} >\n          <TextInput  \n            style={styles.inputText}\n            placeholder=\"Hospital Id...\" \n            placeholderTextColor=\"#003f5c\"\n            onChangeText={id => setText2(id)} />\n        </View>\n          \n        <View style={styles.inputView} >\n              <TextInput  \n                secureTextEntry\n                style={styles.inputText}\n                placeholder=\"Hospital Password...\" \n                placeholderTextColor=\"#003f5c\"\n                onChangeText={id => setText3(id)}/>\n        </View>\n        <TouchableOpacity>\n            <Text style={styles.forgot}>Forgot Password?</Text>\n          </TouchableOpacity>\n          <TouchableOpacity style={styles.loginBtn}>\n            <Text style={styles.loginText}>LOGIN</Text>\n          </TouchableOpacity>\n          \n      </View>\n  );\n}\n\nfunction HospitalScreen ({ navigation, route }) {\n  return <Text>Welcome to {route.params.name} Hospital!</Text>;\n}\n\nfunction PatientScreen ({ navigation, route }) {\n  return <Text>Hello again Patient {route.params.name}!</Text>;\n}\n\nfunction LogoTitle() {\n  return (\n    <Image\n      style={{ width: 100, height: 100 }}\n      source={require('./DORACLE.png')}\n    />\n  );\n}\n\n\n\n\nconst Stack = createStackNavigator();\n\nclass App extends React.Component {\n  state={\n    id:\"\",\n    password:\"\"\n  }\n  render() {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator initialRouteName=\"Home\"\n      screenOptions={{\n        headerStyle: {\n          backgroundColor: 'black',\n        },\n        headerTintColor: '#fff',\n        headerTitleStyle: {\n          fontWeight: 'bold',\n        },\n      }}>\n        <Stack.Screen \n        name=\"Home\" \n        component={HomeScreen}\n        options={{ headerTitle: props => <LogoTitle {...props} /> }} \n        />\n        <Stack.Screen name=\"Patient Login\" \n        component={PLoginScreen} \n        />\n        <Stack.Screen name=\"Hospital Login\" \n        component={HLoginScreen}\n        options={({ route }) => ({ title: route.params.name })}\n        />\n        <Stack.Screen name=\"Hospital\" \n        component={HospitalScreen} \n        options={\n          ({ route }) => ({ title: route.params.name })\n          }\n        />\n        <Stack.Screen \n        name=\"Patient\" \n        component={PatientScreen} \n        options={({ route }) => ({ title: route.params.name })}\n        />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#003f5c',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  text: {\n    color: 'lightblue',\n    fontFamily: 'Monospace',\n    fontSize: 16,\n  },\n  inputView:{\n    width:\"80%\",\n    backgroundColor:\"#465881\",\n    borderRadius:25,\n    height:50,\n    marginBottom:20,\n    justifyContent:\"center\",\n    padding:20\n  },\n  inputText:{\n    height:50,\n    color:\"white\"\n  },\n  forgot:{\n    color:\"white\",\n    fontSize:11\n  },\n  loginBtn:{\n    width:\"80%\",\n    backgroundColor:\"#fb5b5a\",\n    borderRadius:25,\n    height:50,\n    alignItems:\"center\",\n    justifyContent:\"center\",\n    marginTop:40,\n    marginBottom:10\n  },\n  loginText:{\n    color:\"white\"\n  }\n});\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}